// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.19.4
// source: feature.proto

package feature

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CacheType int32

const (
	CacheType_PopularArticles     CacheType = 0
	CacheType_UserPublishedPapers CacheType = 1
	CacheType_UserBehaviourPapers CacheType = 2
)

// Enum value maps for CacheType.
var (
	CacheType_name = map[int32]string{
		0: "PopularArticles",
		1: "UserPublishedPapers",
		2: "UserBehaviourPapers",
	}
	CacheType_value = map[string]int32{
		"PopularArticles":     0,
		"UserPublishedPapers": 1,
		"UserBehaviourPapers": 2,
	}
)

func (x CacheType) Enum() *CacheType {
	p := new(CacheType)
	*p = x
	return p
}

func (x CacheType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CacheType) Descriptor() protoreflect.EnumDescriptor {
	return file_feature_proto_enumTypes[0].Descriptor()
}

func (CacheType) Type() protoreflect.EnumType {
	return &file_feature_proto_enumTypes[0]
}

func (x CacheType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CacheType.Descriptor instead.
func (CacheType) EnumDescriptor() ([]byte, []int) {
	return file_feature_proto_rawDescGZIP(), []int{0}
}

type UserFeatureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 上次获取特征的时间，如果不传则拉取全量特征数据
	LastFetchVersion string   `protobuf:"bytes,1,opt,name=last_fetch_version,json=lastFetchVersion,proto3" json:"last_fetch_version,omitempty"`
	EndFetchVersion  string   `protobuf:"bytes,2,opt,name=end_fetch_version,json=endFetchVersion,proto3" json:"end_fetch_version,omitempty"`
	Fields           []string `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	// 是否打乱特征数据，如果为true则打乱，否则不打乱
	Shuffle bool `protobuf:"varint,4,opt,name=shuffle,proto3" json:"shuffle,omitempty"`
}

func (x *UserFeatureRequest) Reset() {
	*x = UserFeatureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFeatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFeatureRequest) ProtoMessage() {}

func (x *UserFeatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feature_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFeatureRequest.ProtoReflect.Descriptor instead.
func (*UserFeatureRequest) Descriptor() ([]byte, []int) {
	return file_feature_proto_rawDescGZIP(), []int{0}
}

func (x *UserFeatureRequest) GetLastFetchVersion() string {
	if x != nil {
		return x.LastFetchVersion
	}
	return ""
}

func (x *UserFeatureRequest) GetEndFetchVersion() string {
	if x != nil {
		return x.EndFetchVersion
	}
	return ""
}

func (x *UserFeatureRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *UserFeatureRequest) GetShuffle() bool {
	if x != nil {
		return x.Shuffle
	}
	return false
}

type UserFeature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Weight      float32  `protobuf:"fixed32,3,opt,name=weight,proto3" json:"weight,omitempty"`
	Age         string   `protobuf:"bytes,4,opt,name=age,proto3" json:"age,omitempty"`
	Gender      string   `protobuf:"bytes,5,opt,name=gender,proto3" json:"gender,omitempty"`
	Direction   string   `protobuf:"bytes,6,opt,name=direction,proto3" json:"direction,omitempty"`
	Topic       []string `protobuf:"bytes,7,rep,name=topic,proto3" json:"topic,omitempty"`
	Birthday    string   `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Institution string   `protobuf:"bytes,9,opt,name=institution,proto3" json:"institution,omitempty"`
}

func (x *UserFeature) Reset() {
	*x = UserFeature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFeature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFeature) ProtoMessage() {}

func (x *UserFeature) ProtoReflect() protoreflect.Message {
	mi := &file_feature_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFeature.ProtoReflect.Descriptor instead.
func (*UserFeature) Descriptor() ([]byte, []int) {
	return file_feature_proto_rawDescGZIP(), []int{1}
}

func (x *UserFeature) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UserFeature) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserFeature) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *UserFeature) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

func (x *UserFeature) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *UserFeature) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *UserFeature) GetTopic() []string {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *UserFeature) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *UserFeature) GetInstitution() string {
	if x != nil {
		return x.Institution
	}
	return ""
}

type ArticleFeatureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 上次获取特征的时间，如果不传则拉取全量特征数据
	LastFetchVersion string   `protobuf:"bytes,1,opt,name=last_fetch_version,json=lastFetchVersion,proto3" json:"last_fetch_version,omitempty"`
	EndFetchVersion  string   `protobuf:"bytes,2,opt,name=end_fetch_version,json=endFetchVersion,proto3" json:"end_fetch_version,omitempty"`
	Fields           []string `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	// 是否打乱特征数据，如果为true则打乱，否则不打乱
	Shuffle bool `protobuf:"varint,4,opt,name=shuffle,proto3" json:"shuffle,omitempty"`
}

func (x *ArticleFeatureRequest) Reset() {
	*x = ArticleFeatureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleFeatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleFeatureRequest) ProtoMessage() {}

func (x *ArticleFeatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feature_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleFeatureRequest.ProtoReflect.Descriptor instead.
func (*ArticleFeatureRequest) Descriptor() ([]byte, []int) {
	return file_feature_proto_rawDescGZIP(), []int{2}
}

func (x *ArticleFeatureRequest) GetLastFetchVersion() string {
	if x != nil {
		return x.LastFetchVersion
	}
	return ""
}

func (x *ArticleFeatureRequest) GetEndFetchVersion() string {
	if x != nil {
		return x.EndFetchVersion
	}
	return ""
}

func (x *ArticleFeatureRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ArticleFeatureRequest) GetShuffle() bool {
	if x != nil {
		return x.Shuffle
	}
	return false
}

type ArticleFeature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleId     string   `protobuf:"bytes,1,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	Title         string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content       string   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	CategoryLevel string   `protobuf:"bytes,4,opt,name=category_level,json=categoryLevel,proto3" json:"category_level,omitempty"`
	Tags          []string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	Author        []string `protobuf:"bytes,6,rep,name=author,proto3" json:"author,omitempty"`
	ImpactFactor  string   `protobuf:"bytes,7,opt,name=impact_factor,json=impactFactor,proto3" json:"impact_factor,omitempty"`
	BhvTime       string   `protobuf:"bytes,8,opt,name=bhv_time,json=bhvTime,proto3" json:"bhv_time,omitempty"`
	Weight        float32  `protobuf:"fixed32,9,opt,name=weight,proto3" json:"weight,omitempty"`
	Age           int32    `protobuf:"varint,10,opt,name=age,proto3" json:"age,omitempty"`
	Year          int32    `protobuf:"varint,11,opt,name=year,proto3" json:"year,omitempty"`
	Issue         string   `protobuf:"bytes,12,opt,name=issue,proto3" json:"issue,omitempty"`
	Volume        string   `protobuf:"bytes,13,opt,name=volume,proto3" json:"volume,omitempty"`
	Indexed       int32    `protobuf:"varint,14,opt,name=indexed,proto3" json:"indexed,omitempty"`
	Organization  string   `protobuf:"bytes,15,opt,name=organization,proto3" json:"organization,omitempty"`
}

func (x *ArticleFeature) Reset() {
	*x = ArticleFeature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleFeature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleFeature) ProtoMessage() {}

func (x *ArticleFeature) ProtoReflect() protoreflect.Message {
	mi := &file_feature_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleFeature.ProtoReflect.Descriptor instead.
func (*ArticleFeature) Descriptor() ([]byte, []int) {
	return file_feature_proto_rawDescGZIP(), []int{3}
}

func (x *ArticleFeature) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *ArticleFeature) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ArticleFeature) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ArticleFeature) GetCategoryLevel() string {
	if x != nil {
		return x.CategoryLevel
	}
	return ""
}

func (x *ArticleFeature) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ArticleFeature) GetAuthor() []string {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *ArticleFeature) GetImpactFactor() string {
	if x != nil {
		return x.ImpactFactor
	}
	return ""
}

func (x *ArticleFeature) GetBhvTime() string {
	if x != nil {
		return x.BhvTime
	}
	return ""
}

func (x *ArticleFeature) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ArticleFeature) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *ArticleFeature) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *ArticleFeature) GetIssue() string {
	if x != nil {
		return x.Issue
	}
	return ""
}

func (x *ArticleFeature) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *ArticleFeature) GetIndexed() int32 {
	if x != nil {
		return x.Indexed
	}
	return 0
}

func (x *ArticleFeature) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

type BehaviorFeatureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 上次获取特征的时间，如果不传则拉取全量特征数据
	LastFetchVersion string   `protobuf:"bytes,1,opt,name=last_fetch_version,json=lastFetchVersion,proto3" json:"last_fetch_version,omitempty"`
	EndFetchVersion  string   `protobuf:"bytes,2,opt,name=end_fetch_version,json=endFetchVersion,proto3" json:"end_fetch_version,omitempty"`
	Fields           []string `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	// 是否打乱特征数据，如果为true则打乱，否则不打乱
	Shuffle bool `protobuf:"varint,4,opt,name=shuffle,proto3" json:"shuffle,omitempty"`
}

func (x *BehaviorFeatureRequest) Reset() {
	*x = BehaviorFeatureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BehaviorFeatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BehaviorFeatureRequest) ProtoMessage() {}

func (x *BehaviorFeatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feature_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BehaviorFeatureRequest.ProtoReflect.Descriptor instead.
func (*BehaviorFeatureRequest) Descriptor() ([]byte, []int) {
	return file_feature_proto_rawDescGZIP(), []int{4}
}

func (x *BehaviorFeatureRequest) GetLastFetchVersion() string {
	if x != nil {
		return x.LastFetchVersion
	}
	return ""
}

func (x *BehaviorFeatureRequest) GetEndFetchVersion() string {
	if x != nil {
		return x.EndFetchVersion
	}
	return ""
}

func (x *BehaviorFeatureRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *BehaviorFeatureRequest) GetShuffle() bool {
	if x != nil {
		return x.Shuffle
	}
	return false
}

type BehaviorFeatureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       string  `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ArticleId string  `protobuf:"bytes,2,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	BhvTime   string  `protobuf:"bytes,3,opt,name=bhv_time,json=bhvTime,proto3" json:"bhv_time,omitempty"`
	Weight    float32 `protobuf:"fixed32,4,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *BehaviorFeatureResponse) Reset() {
	*x = BehaviorFeatureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BehaviorFeatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BehaviorFeatureResponse) ProtoMessage() {}

func (x *BehaviorFeatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feature_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BehaviorFeatureResponse.ProtoReflect.Descriptor instead.
func (*BehaviorFeatureResponse) Descriptor() ([]byte, []int) {
	return file_feature_proto_rawDescGZIP(), []int{5}
}

func (x *BehaviorFeatureResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *BehaviorFeatureResponse) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *BehaviorFeatureResponse) GetBhvTime() string {
	if x != nil {
		return x.BhvTime
	}
	return ""
}

func (x *BehaviorFeatureResponse) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type CooperatorFeatureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 上次获取特征的时间，如果不传则拉取全量特征数据
	LastFetchVersion string   `protobuf:"bytes,1,opt,name=last_fetch_version,json=lastFetchVersion,proto3" json:"last_fetch_version,omitempty"`
	EndFetchVersion  string   `protobuf:"bytes,2,opt,name=end_fetch_version,json=endFetchVersion,proto3" json:"end_fetch_version,omitempty"`
	Fields           []string `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	// 是否打乱特征数据，如果为true则打乱，否则不打乱
	Shuffle bool `protobuf:"varint,4,opt,name=shuffle,proto3" json:"shuffle,omitempty"`
}

func (x *CooperatorFeatureRequest) Reset() {
	*x = CooperatorFeatureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CooperatorFeatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CooperatorFeatureRequest) ProtoMessage() {}

func (x *CooperatorFeatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feature_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CooperatorFeatureRequest.ProtoReflect.Descriptor instead.
func (*CooperatorFeatureRequest) Descriptor() ([]byte, []int) {
	return file_feature_proto_rawDescGZIP(), []int{6}
}

func (x *CooperatorFeatureRequest) GetLastFetchVersion() string {
	if x != nil {
		return x.LastFetchVersion
	}
	return ""
}

func (x *CooperatorFeatureRequest) GetEndFetchVersion() string {
	if x != nil {
		return x.EndFetchVersion
	}
	return ""
}

func (x *CooperatorFeatureRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *CooperatorFeatureRequest) GetShuffle() bool {
	if x != nil {
		return x.Shuffle
	}
	return false
}

type CooperatorFeatureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Cid string `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"`
	Num int32  `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *CooperatorFeatureResponse) Reset() {
	*x = CooperatorFeatureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CooperatorFeatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CooperatorFeatureResponse) ProtoMessage() {}

func (x *CooperatorFeatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feature_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CooperatorFeatureResponse.ProtoReflect.Descriptor instead.
func (*CooperatorFeatureResponse) Descriptor() ([]byte, []int) {
	return file_feature_proto_rawDescGZIP(), []int{7}
}

func (x *CooperatorFeatureResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *CooperatorFeatureResponse) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *CooperatorFeatureResponse) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type PublishedPaperFeatureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 上次获取特征的时间，如果不传则拉取全量特征数据
	LastFetchVersion string   `protobuf:"bytes,1,opt,name=last_fetch_version,json=lastFetchVersion,proto3" json:"last_fetch_version,omitempty"`
	EndFetchVersion  string   `protobuf:"bytes,2,opt,name=end_fetch_version,json=endFetchVersion,proto3" json:"end_fetch_version,omitempty"`
	Fields           []string `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	// 是否打乱特征数据，如果为true则打乱，否则不打乱
	Shuffle bool `protobuf:"varint,4,opt,name=shuffle,proto3" json:"shuffle,omitempty"`
}

func (x *PublishedPaperFeatureRequest) Reset() {
	*x = PublishedPaperFeatureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishedPaperFeatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishedPaperFeatureRequest) ProtoMessage() {}

func (x *PublishedPaperFeatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feature_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishedPaperFeatureRequest.ProtoReflect.Descriptor instead.
func (*PublishedPaperFeatureRequest) Descriptor() ([]byte, []int) {
	return file_feature_proto_rawDescGZIP(), []int{8}
}

func (x *PublishedPaperFeatureRequest) GetLastFetchVersion() string {
	if x != nil {
		return x.LastFetchVersion
	}
	return ""
}

func (x *PublishedPaperFeatureRequest) GetEndFetchVersion() string {
	if x != nil {
		return x.EndFetchVersion
	}
	return ""
}

func (x *PublishedPaperFeatureRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *PublishedPaperFeatureRequest) GetShuffle() bool {
	if x != nil {
		return x.Shuffle
	}
	return false
}

type PublishedPaperFeatureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId        string   `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Status        string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	SceneId       string   `protobuf:"bytes,3,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	PubTime       string   `protobuf:"bytes,4,opt,name=pub_time,json=pubTime,proto3" json:"pub_time,omitempty"`
	Title         string   `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Weight        string   `protobuf:"bytes,6,opt,name=weight,proto3" json:"weight,omitempty"`
	CategoryLevel string   `protobuf:"bytes,7,opt,name=category_level,json=categoryLevel,proto3" json:"category_level,omitempty"`
	CategoryPath  string   `protobuf:"bytes,8,opt,name=category_path,json=categoryPath,proto3" json:"category_path,omitempty"`
	Tags          []string `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`
	Author        []string `protobuf:"bytes,10,rep,name=author,proto3" json:"author,omitempty"`
	Year          string   `protobuf:"bytes,11,opt,name=year,proto3" json:"year,omitempty"`
	Volume        string   `protobuf:"bytes,12,opt,name=volume,proto3" json:"volume,omitempty"`
	Issue         string   `protobuf:"bytes,13,opt,name=issue,proto3" json:"issue,omitempty"`
	Indexed       string   `protobuf:"bytes,14,opt,name=indexed,proto3" json:"indexed,omitempty"`
	ImpactFactor  string   `protobuf:"bytes,15,opt,name=impact_factor,json=impactFactor,proto3" json:"impact_factor,omitempty"`
	Content       string   `protobuf:"bytes,16,opt,name=content,proto3" json:"content,omitempty"`
	Organization  string   `protobuf:"bytes,17,opt,name=organization,proto3" json:"organization,omitempty"`
	ClickCnt      string   `protobuf:"bytes,18,opt,name=click_cnt,json=clickCnt,proto3" json:"click_cnt,omitempty"`
	LikeCnt       string   `protobuf:"bytes,19,opt,name=like_cnt,json=likeCnt,proto3" json:"like_cnt,omitempty"`
	CollectCnt    string   `protobuf:"bytes,20,opt,name=collect_cnt,json=collectCnt,proto3" json:"collect_cnt,omitempty"`
	DownloadCnt   string   `protobuf:"bytes,21,opt,name=download_cnt,json=downloadCnt,proto3" json:"download_cnt,omitempty"`
	Uid           string   `protobuf:"bytes,22,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *PublishedPaperFeatureResponse) Reset() {
	*x = PublishedPaperFeatureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishedPaperFeatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishedPaperFeatureResponse) ProtoMessage() {}

func (x *PublishedPaperFeatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feature_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishedPaperFeatureResponse.ProtoReflect.Descriptor instead.
func (*PublishedPaperFeatureResponse) Descriptor() ([]byte, []int) {
	return file_feature_proto_rawDescGZIP(), []int{9}
}

func (x *PublishedPaperFeatureResponse) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *PublishedPaperFeatureResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PublishedPaperFeatureResponse) GetSceneId() string {
	if x != nil {
		return x.SceneId
	}
	return ""
}

func (x *PublishedPaperFeatureResponse) GetPubTime() string {
	if x != nil {
		return x.PubTime
	}
	return ""
}

func (x *PublishedPaperFeatureResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PublishedPaperFeatureResponse) GetWeight() string {
	if x != nil {
		return x.Weight
	}
	return ""
}

func (x *PublishedPaperFeatureResponse) GetCategoryLevel() string {
	if x != nil {
		return x.CategoryLevel
	}
	return ""
}

func (x *PublishedPaperFeatureResponse) GetCategoryPath() string {
	if x != nil {
		return x.CategoryPath
	}
	return ""
}

func (x *PublishedPaperFeatureResponse) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *PublishedPaperFeatureResponse) GetAuthor() []string {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *PublishedPaperFeatureResponse) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *PublishedPaperFeatureResponse) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *PublishedPaperFeatureResponse) GetIssue() string {
	if x != nil {
		return x.Issue
	}
	return ""
}

func (x *PublishedPaperFeatureResponse) GetIndexed() string {
	if x != nil {
		return x.Indexed
	}
	return ""
}

func (x *PublishedPaperFeatureResponse) GetImpactFactor() string {
	if x != nil {
		return x.ImpactFactor
	}
	return ""
}

func (x *PublishedPaperFeatureResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PublishedPaperFeatureResponse) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *PublishedPaperFeatureResponse) GetClickCnt() string {
	if x != nil {
		return x.ClickCnt
	}
	return ""
}

func (x *PublishedPaperFeatureResponse) GetLikeCnt() string {
	if x != nil {
		return x.LikeCnt
	}
	return ""
}

func (x *PublishedPaperFeatureResponse) GetCollectCnt() string {
	if x != nil {
		return x.CollectCnt
	}
	return ""
}

func (x *PublishedPaperFeatureResponse) GetDownloadCnt() string {
	if x != nil {
		return x.DownloadCnt
	}
	return ""
}

func (x *PublishedPaperFeatureResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

// 定义 PaperInfo 消息
type PaperInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleId     string   `protobuf:"bytes,1,opt,name=articleId,proto3" json:"articleId,omitempty"`
	Title         string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content       string   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	CategoryLevel string   `protobuf:"bytes,4,opt,name=categoryLevel,proto3" json:"categoryLevel,omitempty"`
	Tags          []string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	Author        []string `protobuf:"bytes,6,rep,name=author,proto3" json:"author,omitempty"`
	ImpactFactor  string   `protobuf:"bytes,7,opt,name=impactFactor,proto3" json:"impactFactor,omitempty"`
	BhvCnt        int64    `protobuf:"varint,8,opt,name=bhvCnt,proto3" json:"bhvCnt,omitempty"`
	Weight        float64  `protobuf:"fixed64,9,opt,name=weight,proto3" json:"weight,omitempty"`
	Age           float64  `protobuf:"fixed64,10,opt,name=age,proto3" json:"age,omitempty"`
	Year          int64    `protobuf:"varint,11,opt,name=year,proto3" json:"year,omitempty"`
	Issue         string   `protobuf:"bytes,12,opt,name=issue,proto3" json:"issue,omitempty"`
	Volume        string   `protobuf:"bytes,13,opt,name=volume,proto3" json:"volume,omitempty"`
	Indexed       int64    `protobuf:"varint,14,opt,name=indexed,proto3" json:"indexed,omitempty"`
	Organization  string   `protobuf:"bytes,15,opt,name=organization,proto3" json:"organization,omitempty"`
	BhvTime       string   `protobuf:"bytes,16,opt,name=bhvTime,proto3" json:"bhvTime,omitempty"`
	BhvWeight     float32  `protobuf:"fixed32,17,opt,name=bhvWeight,proto3" json:"bhvWeight,omitempty"`
}

func (x *PaperInfo) Reset() {
	*x = PaperInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaperInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaperInfo) ProtoMessage() {}

func (x *PaperInfo) ProtoReflect() protoreflect.Message {
	mi := &file_feature_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaperInfo.ProtoReflect.Descriptor instead.
func (*PaperInfo) Descriptor() ([]byte, []int) {
	return file_feature_proto_rawDescGZIP(), []int{10}
}

func (x *PaperInfo) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *PaperInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PaperInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PaperInfo) GetCategoryLevel() string {
	if x != nil {
		return x.CategoryLevel
	}
	return ""
}

func (x *PaperInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *PaperInfo) GetAuthor() []string {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *PaperInfo) GetImpactFactor() string {
	if x != nil {
		return x.ImpactFactor
	}
	return ""
}

func (x *PaperInfo) GetBhvCnt() int64 {
	if x != nil {
		return x.BhvCnt
	}
	return 0
}

func (x *PaperInfo) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *PaperInfo) GetAge() float64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *PaperInfo) GetYear() int64 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *PaperInfo) GetIssue() string {
	if x != nil {
		return x.Issue
	}
	return ""
}

func (x *PaperInfo) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *PaperInfo) GetIndexed() int64 {
	if x != nil {
		return x.Indexed
	}
	return 0
}

func (x *PaperInfo) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *PaperInfo) GetBhvTime() string {
	if x != nil {
		return x.BhvTime
	}
	return ""
}

func (x *PaperInfo) GetBhvWeight() float32 {
	if x != nil {
		return x.BhvWeight
	}
	return 0
}

// 定义 GetUserPublishedPaper 请求消息
type GetUserPublishedPaperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetUserPublishedPaperRequest) Reset() {
	*x = GetUserPublishedPaperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserPublishedPaperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPublishedPaperRequest) ProtoMessage() {}

func (x *GetUserPublishedPaperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feature_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPublishedPaperRequest.ProtoReflect.Descriptor instead.
func (*GetUserPublishedPaperRequest) Descriptor() ([]byte, []int) {
	return file_feature_proto_rawDescGZIP(), []int{11}
}

func (x *GetUserPublishedPaperRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 定义 GetUserPublishedPaper 响应消息
type GetUserPublishedPaperResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaperInfos []*PaperInfo `protobuf:"bytes,1,rep,name=paperInfos,proto3" json:"paperInfos,omitempty"` // 会根据用户发表的论文时间倒序排列
	Topic      []string     `protobuf:"bytes,2,rep,name=topic,proto3" json:"topic,omitempty"`           // 对应UserId的研究主题
}

func (x *GetUserPublishedPaperResponse) Reset() {
	*x = GetUserPublishedPaperResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserPublishedPaperResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPublishedPaperResponse) ProtoMessage() {}

func (x *GetUserPublishedPaperResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feature_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPublishedPaperResponse.ProtoReflect.Descriptor instead.
func (*GetUserPublishedPaperResponse) Descriptor() ([]byte, []int) {
	return file_feature_proto_rawDescGZIP(), []int{12}
}

func (x *GetUserPublishedPaperResponse) GetPaperInfos() []*PaperInfo {
	if x != nil {
		return x.PaperInfos
	}
	return nil
}

func (x *GetUserPublishedPaperResponse) GetTopic() []string {
	if x != nil {
		return x.Topic
	}
	return nil
}

// 定义 GetUserBehaviourPaper 请求消息
type GetUserBehaviourPaperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	BhvTime   int64  `protobuf:"varint,2,opt,name=bhvTime,proto3" json:"bhvTime,omitempty"`
	MinBhvCnt int64  `protobuf:"varint,3,opt,name=minBhvCnt,proto3" json:"minBhvCnt,omitempty"`
}

func (x *GetUserBehaviourPaperRequest) Reset() {
	*x = GetUserBehaviourPaperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserBehaviourPaperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBehaviourPaperRequest) ProtoMessage() {}

func (x *GetUserBehaviourPaperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feature_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBehaviourPaperRequest.ProtoReflect.Descriptor instead.
func (*GetUserBehaviourPaperRequest) Descriptor() ([]byte, []int) {
	return file_feature_proto_rawDescGZIP(), []int{13}
}

func (x *GetUserBehaviourPaperRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserBehaviourPaperRequest) GetBhvTime() int64 {
	if x != nil {
		return x.BhvTime
	}
	return 0
}

func (x *GetUserBehaviourPaperRequest) GetMinBhvCnt() int64 {
	if x != nil {
		return x.MinBhvCnt
	}
	return 0
}

// 定义 GetUserBehaviourPaper 响应消息
type GetUserBehaviourPaperResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaperInfos []*PaperInfo `protobuf:"bytes,1,rep,name=paperInfos,proto3" json:"paperInfos,omitempty"`
}

func (x *GetUserBehaviourPaperResponse) Reset() {
	*x = GetUserBehaviourPaperResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserBehaviourPaperResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBehaviourPaperResponse) ProtoMessage() {}

func (x *GetUserBehaviourPaperResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feature_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBehaviourPaperResponse.ProtoReflect.Descriptor instead.
func (*GetUserBehaviourPaperResponse) Descriptor() ([]byte, []int) {
	return file_feature_proto_rawDescGZIP(), []int{14}
}

func (x *GetUserBehaviourPaperResponse) GetPaperInfos() []*PaperInfo {
	if x != nil {
		return x.PaperInfos
	}
	return nil
}

// 定义 GetUserCooperator 请求消息
type GetUserCooperatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetUserCooperatorRequest) Reset() {
	*x = GetUserCooperatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCooperatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCooperatorRequest) ProtoMessage() {}

func (x *GetUserCooperatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feature_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCooperatorRequest.ProtoReflect.Descriptor instead.
func (*GetUserCooperatorRequest) Descriptor() ([]byte, []int) {
	return file_feature_proto_rawDescGZIP(), []int{15}
}

func (x *GetUserCooperatorRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CooperatorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid    string   `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`               // 合作学者id
	Num    float32  `protobuf:"fixed32,2,opt,name=num,proto3" json:"num,omitempty"`             // 合作次数
	Weight *float32 `protobuf:"fixed32,3,opt,name=weight,proto3,oneof" json:"weight,omitempty"` // 用户表计算的权重
	Name   string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`             // 合作学者姓名
}

func (x *CooperatorInfo) Reset() {
	*x = CooperatorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CooperatorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CooperatorInfo) ProtoMessage() {}

func (x *CooperatorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_feature_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CooperatorInfo.ProtoReflect.Descriptor instead.
func (*CooperatorInfo) Descriptor() ([]byte, []int) {
	return file_feature_proto_rawDescGZIP(), []int{16}
}

func (x *CooperatorInfo) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *CooperatorInfo) GetNum() float32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *CooperatorInfo) GetWeight() float32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

func (x *CooperatorInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 定义 GetUserCooperator 响应消息
type GetUserCooperatorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid             string            `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	CooperatorInfos []*CooperatorInfo `protobuf:"bytes,2,rep,name=cooperatorInfos,proto3" json:"cooperatorInfos,omitempty"`
}

func (x *GetUserCooperatorResponse) Reset() {
	*x = GetUserCooperatorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCooperatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCooperatorResponse) ProtoMessage() {}

func (x *GetUserCooperatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feature_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCooperatorResponse.ProtoReflect.Descriptor instead.
func (*GetUserCooperatorResponse) Descriptor() ([]byte, []int) {
	return file_feature_proto_rawDescGZIP(), []int{17}
}

func (x *GetUserCooperatorResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetUserCooperatorResponse) GetCooperatorInfos() []*CooperatorInfo {
	if x != nil {
		return x.CooperatorInfos
	}
	return nil
}

// 定义 GetPopularPapers 请求消息
type GetPopularPapersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopK int64 `protobuf:"varint,1,opt,name=topK,proto3" json:"topK,omitempty"`
}

func (x *GetPopularPapersRequest) Reset() {
	*x = GetPopularPapersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPopularPapersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPopularPapersRequest) ProtoMessage() {}

func (x *GetPopularPapersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feature_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPopularPapersRequest.ProtoReflect.Descriptor instead.
func (*GetPopularPapersRequest) Descriptor() ([]byte, []int) {
	return file_feature_proto_rawDescGZIP(), []int{18}
}

func (x *GetPopularPapersRequest) GetTopK() int64 {
	if x != nil {
		return x.TopK
	}
	return 0
}

// 定义 GetPopularPapers 响应消息
type GetPopularPapersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaperInfos []*PaperInfo `protobuf:"bytes,1,rep,name=paperInfos,proto3" json:"paperInfos,omitempty"`
}

func (x *GetPopularPapersResponse) Reset() {
	*x = GetPopularPapersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPopularPapersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPopularPapersResponse) ProtoMessage() {}

func (x *GetPopularPapersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feature_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPopularPapersResponse.ProtoReflect.Descriptor instead.
func (*GetPopularPapersResponse) Descriptor() ([]byte, []int) {
	return file_feature_proto_rawDescGZIP(), []int{19}
}

func (x *GetPopularPapersResponse) GetPaperInfos() []*PaperInfo {
	if x != nil {
		return x.PaperInfos
	}
	return nil
}

type GetTopicsAndTagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTopicsAndTagsRequest) Reset() {
	*x = GetTopicsAndTagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopicsAndTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicsAndTagsRequest) ProtoMessage() {}

func (x *GetTopicsAndTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feature_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopicsAndTagsRequest.ProtoReflect.Descriptor instead.
func (*GetTopicsAndTagsRequest) Descriptor() ([]byte, []int) {
	return file_feature_proto_rawDescGZIP(), []int{20}
}

type GetTopicsAndTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
}

func (x *GetTopicsAndTagsResponse) Reset() {
	*x = GetTopicsAndTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopicsAndTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicsAndTagsResponse) ProtoMessage() {}

func (x *GetTopicsAndTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feature_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopicsAndTagsResponse.ProtoReflect.Descriptor instead.
func (*GetTopicsAndTagsResponse) Descriptor() ([]byte, []int) {
	return file_feature_proto_rawDescGZIP(), []int{21}
}

func (x *GetTopicsAndTagsResponse) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

type RefreshCacheRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 要刷新的缓存
	Cache CacheType `protobuf:"varint,1,opt,name=cache,proto3,enum=feature.CacheType" json:"cache,omitempty"`
}

func (x *RefreshCacheRequest) Reset() {
	*x = RefreshCacheRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshCacheRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshCacheRequest) ProtoMessage() {}

func (x *RefreshCacheRequest) ProtoReflect() protoreflect.Message {
	mi := &file_feature_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshCacheRequest.ProtoReflect.Descriptor instead.
func (*RefreshCacheRequest) Descriptor() ([]byte, []int) {
	return file_feature_proto_rawDescGZIP(), []int{22}
}

func (x *RefreshCacheRequest) GetCache() CacheType {
	if x != nil {
		return x.Cache
	}
	return CacheType_PopularArticles
}

type RefreshCacheResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefreshCacheResponse) Reset() {
	*x = RefreshCacheResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feature_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshCacheResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshCacheResponse) ProtoMessage() {}

func (x *RefreshCacheResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feature_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshCacheResponse.ProtoReflect.Descriptor instead.
func (*RefreshCacheResponse) Descriptor() ([]byte, []int) {
	return file_feature_proto_rawDescGZIP(), []int{23}
}

var File_feature_proto protoreflect.FileDescriptor

var file_feature_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x12, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x73,
	0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a,
	0x11, 0x65, 0x6e, 0x64, 0x5f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x22, 0xe7, 0x01, 0x0a, 0x0b,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x64, 0x61, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x74,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa3, 0x01, 0x0a, 0x15, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x73,
	0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a,
	0x11, 0x65, 0x6e, 0x64, 0x5f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x22, 0x9c, 0x03, 0x0a, 0x0e,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x46,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x68, 0x76, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x68, 0x76, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65,
	0x61, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x73, 0x73, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa4, 0x01, 0x0a, 0x16, 0x42,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x66, 0x65,
	0x74, 0x63, 0x68, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x64, 0x5f, 0x66, 0x65, 0x74, 0x63, 0x68,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x65, 0x6e, 0x64, 0x46, 0x65, 0x74, 0x63, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x75, 0x66, 0x66,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x68, 0x75, 0x66, 0x66, 0x6c,
	0x65, 0x22, 0x7d, 0x0a, 0x17, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x68, 0x76, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x68, 0x76, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x22, 0xa6, 0x01, 0x0a, 0x18, 0x43, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a,
	0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x65,
	0x6e, 0x64, 0x5f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x22, 0x51, 0x0a, 0x19, 0x43, 0x6f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0xaa, 0x01, 0x0a,
	0x1c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a,
	0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x65,
	0x6e, 0x64, 0x5f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x6e, 0x64, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x22, 0xf9, 0x04, 0x0a, 0x1d, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x75, 0x62, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x75, 0x62, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x73, 0x75, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x73, 0x73, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x5f, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6d, 0x70,
	0x61, 0x63, 0x74, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x63, 0x6b,
	0x5f, 0x63, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x63,
	0x6b, 0x43, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x63, 0x6e, 0x74,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6e, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x6e, 0x74,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x43, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0xc9, 0x03, 0x0a, 0x09, 0x50, 0x61, 0x70, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x46, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6d, 0x70, 0x61, 0x63,
	0x74, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x68, 0x76, 0x43, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x62, 0x68, 0x76, 0x43, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61,
	0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x73, 0x73, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x68, 0x76,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x68, 0x76, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x68, 0x76, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x62, 0x68, 0x76, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x22, 0x36, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x50, 0x61, 0x70,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x61,
	0x70, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0a, 0x70, 0x61, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x22, 0x6e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x68, 0x76, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62,
	0x68, 0x76, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x42, 0x68, 0x76,
	0x43, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x42, 0x68,
	0x76, 0x43, 0x6e, 0x74, 0x22, 0x53, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x61, 0x70, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70,
	0x61, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x32, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x70, 0x0a,
	0x0e, 0x43, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03,
	0x6e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22,
	0x70, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x41,
	0x0a, 0x0f, 0x63, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x43, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0f, 0x63, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x22, 0x2d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x50,
	0x61, 0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x6f, 0x70, 0x4b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x6f, 0x70, 0x4b,
	0x22, 0x4e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x50, 0x61,
	0x70, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a,
	0x70, 0x61, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70, 0x61, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x22, 0x19, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x41, 0x6e, 0x64,
	0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x30, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x41, 0x6e, 0x64, 0x54, 0x61, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x22, 0x3f, 0x0a,
	0x13, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x22, 0x16,
	0x0a, 0x14, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x52, 0x0a, 0x09, 0x43, 0x61, 0x63, 0x68, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x50, 0x61, 0x70, 0x65, 0x72, 0x73, 0x10,
	0x01, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x75, 0x72, 0x50, 0x61, 0x70, 0x65, 0x72, 0x73, 0x10, 0x02, 0x32, 0x9c, 0x08, 0x0a, 0x0d, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x12, 0x1b, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x52, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x1e,
	0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5d, 0x0a, 0x14, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x42, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x42,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x63, 0x0a, 0x16, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x43,
	0x6f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x43, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x6f, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x50, 0x61, 0x70, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x25, 0x2e,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x50, 0x61, 0x70, 0x65, 0x72, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x5b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x41, 0x6e, 0x64,
	0x54, 0x61, 0x67, 0x73, 0x12, 0x20, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x41, 0x6e, 0x64, 0x54, 0x61, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x41, 0x6e, 0x64, 0x54, 0x61, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x68, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x50, 0x61, 0x70, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x50, 0x61, 0x70, 0x65, 0x72,
	0x12, 0x25, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x50, 0x61, 0x70, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x75, 0x72, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x21, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x59, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x50, 0x61, 0x70,
	0x65, 0x72, 0x73, 0x12, 0x20, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x50, 0x61, 0x70, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x50, 0x61, 0x70, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x1c, 0x2e, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_feature_proto_rawDescOnce sync.Once
	file_feature_proto_rawDescData = file_feature_proto_rawDesc
)

func file_feature_proto_rawDescGZIP() []byte {
	file_feature_proto_rawDescOnce.Do(func() {
		file_feature_proto_rawDescData = protoimpl.X.CompressGZIP(file_feature_proto_rawDescData)
	})
	return file_feature_proto_rawDescData
}

var file_feature_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_feature_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_feature_proto_goTypes = []any{
	(CacheType)(0),                        // 0: feature.CacheType
	(*UserFeatureRequest)(nil),            // 1: feature.UserFeatureRequest
	(*UserFeature)(nil),                   // 2: feature.UserFeature
	(*ArticleFeatureRequest)(nil),         // 3: feature.ArticleFeatureRequest
	(*ArticleFeature)(nil),                // 4: feature.ArticleFeature
	(*BehaviorFeatureRequest)(nil),        // 5: feature.BehaviorFeatureRequest
	(*BehaviorFeatureResponse)(nil),       // 6: feature.BehaviorFeatureResponse
	(*CooperatorFeatureRequest)(nil),      // 7: feature.CooperatorFeatureRequest
	(*CooperatorFeatureResponse)(nil),     // 8: feature.CooperatorFeatureResponse
	(*PublishedPaperFeatureRequest)(nil),  // 9: feature.PublishedPaperFeatureRequest
	(*PublishedPaperFeatureResponse)(nil), // 10: feature.PublishedPaperFeatureResponse
	(*PaperInfo)(nil),                     // 11: feature.PaperInfo
	(*GetUserPublishedPaperRequest)(nil),  // 12: feature.GetUserPublishedPaperRequest
	(*GetUserPublishedPaperResponse)(nil), // 13: feature.GetUserPublishedPaperResponse
	(*GetUserBehaviourPaperRequest)(nil),  // 14: feature.GetUserBehaviourPaperRequest
	(*GetUserBehaviourPaperResponse)(nil), // 15: feature.GetUserBehaviourPaperResponse
	(*GetUserCooperatorRequest)(nil),      // 16: feature.GetUserCooperatorRequest
	(*CooperatorInfo)(nil),                // 17: feature.CooperatorInfo
	(*GetUserCooperatorResponse)(nil),     // 18: feature.GetUserCooperatorResponse
	(*GetPopularPapersRequest)(nil),       // 19: feature.GetPopularPapersRequest
	(*GetPopularPapersResponse)(nil),      // 20: feature.GetPopularPapersResponse
	(*GetTopicsAndTagsRequest)(nil),       // 21: feature.GetTopicsAndTagsRequest
	(*GetTopicsAndTagsResponse)(nil),      // 22: feature.GetTopicsAndTagsResponse
	(*RefreshCacheRequest)(nil),           // 23: feature.RefreshCacheRequest
	(*RefreshCacheResponse)(nil),          // 24: feature.RefreshCacheResponse
}
var file_feature_proto_depIdxs = []int32{
	11, // 0: feature.GetUserPublishedPaperResponse.paperInfos:type_name -> feature.PaperInfo
	11, // 1: feature.GetUserBehaviourPaperResponse.paperInfos:type_name -> feature.PaperInfo
	17, // 2: feature.GetUserCooperatorResponse.cooperatorInfos:type_name -> feature.CooperatorInfo
	11, // 3: feature.GetPopularPapersResponse.paperInfos:type_name -> feature.PaperInfo
	0,  // 4: feature.RefreshCacheRequest.cache:type_name -> feature.CacheType
	1,  // 5: feature.FeatureServer.ListUserFeatures:input_type -> feature.UserFeatureRequest
	3,  // 6: feature.FeatureServer.ListArticleFeatures:input_type -> feature.ArticleFeatureRequest
	5,  // 7: feature.FeatureServer.ListBehaviorFeatures:input_type -> feature.BehaviorFeatureRequest
	7,  // 8: feature.FeatureServer.ListCooperatorFeatures:input_type -> feature.CooperatorFeatureRequest
	9,  // 9: feature.FeatureServer.ListPublishedPaperFeatures:input_type -> feature.PublishedPaperFeatureRequest
	21, // 10: feature.FeatureServer.GetTopicsAndTags:input_type -> feature.GetTopicsAndTagsRequest
	12, // 11: feature.FeatureServer.GetUserPublishedPaper:input_type -> feature.GetUserPublishedPaperRequest
	14, // 12: feature.FeatureServer.GetUserBehaviourPaper:input_type -> feature.GetUserBehaviourPaperRequest
	16, // 13: feature.FeatureServer.GetUserCooperator:input_type -> feature.GetUserCooperatorRequest
	19, // 14: feature.FeatureServer.GetPopularPapers:input_type -> feature.GetPopularPapersRequest
	23, // 15: feature.FeatureServer.RefreshCache:input_type -> feature.RefreshCacheRequest
	2,  // 16: feature.FeatureServer.ListUserFeatures:output_type -> feature.UserFeature
	4,  // 17: feature.FeatureServer.ListArticleFeatures:output_type -> feature.ArticleFeature
	6,  // 18: feature.FeatureServer.ListBehaviorFeatures:output_type -> feature.BehaviorFeatureResponse
	8,  // 19: feature.FeatureServer.ListCooperatorFeatures:output_type -> feature.CooperatorFeatureResponse
	10, // 20: feature.FeatureServer.ListPublishedPaperFeatures:output_type -> feature.PublishedPaperFeatureResponse
	22, // 21: feature.FeatureServer.GetTopicsAndTags:output_type -> feature.GetTopicsAndTagsResponse
	13, // 22: feature.FeatureServer.GetUserPublishedPaper:output_type -> feature.GetUserPublishedPaperResponse
	15, // 23: feature.FeatureServer.GetUserBehaviourPaper:output_type -> feature.GetUserBehaviourPaperResponse
	18, // 24: feature.FeatureServer.GetUserCooperator:output_type -> feature.GetUserCooperatorResponse
	20, // 25: feature.FeatureServer.GetPopularPapers:output_type -> feature.GetPopularPapersResponse
	24, // 26: feature.FeatureServer.RefreshCache:output_type -> feature.RefreshCacheResponse
	16, // [16:27] is the sub-list for method output_type
	5,  // [5:16] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_feature_proto_init() }
func file_feature_proto_init() {
	if File_feature_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_feature_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*UserFeatureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*UserFeature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ArticleFeatureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ArticleFeature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*BehaviorFeatureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*BehaviorFeatureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CooperatorFeatureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CooperatorFeatureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*PublishedPaperFeatureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*PublishedPaperFeatureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*PaperInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserPublishedPaperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserPublishedPaperResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserBehaviourPaperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserBehaviourPaperResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserCooperatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*CooperatorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserCooperatorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GetPopularPapersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GetPopularPapersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GetTopicsAndTagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GetTopicsAndTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*RefreshCacheRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feature_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*RefreshCacheResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_feature_proto_msgTypes[16].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_feature_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_feature_proto_goTypes,
		DependencyIndexes: file_feature_proto_depIdxs,
		EnumInfos:         file_feature_proto_enumTypes,
		MessageInfos:      file_feature_proto_msgTypes,
	}.Build()
	File_feature_proto = out.File
	file_feature_proto_rawDesc = nil
	file_feature_proto_goTypes = nil
	file_feature_proto_depIdxs = nil
}
