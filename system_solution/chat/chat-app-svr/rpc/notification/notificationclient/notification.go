// Code generated by goctl. DO NOT EDIT.
// Source: notification.proto

package notificationclient

import (
	"context"

	"chat-app-svr/rpc/notification/notification"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	PushMessageReply   = notification.PushMessageReply
	PushMessageRequest = notification.PushMessageRequest

	Notification interface {
		PushMessage(ctx context.Context, in *PushMessageRequest, opts ...grpc.CallOption) (*PushMessageReply, error)
	}

	defaultNotification struct {
		cli zrpc.Client
	}
)

func NewNotification(cli zrpc.Client) Notification {
	return &defaultNotification{
		cli: cli,
	}
}

func (m *defaultNotification) PushMessage(ctx context.Context, in *PushMessageRequest, opts ...grpc.CallOption) (*PushMessageReply, error) {
	client := notification.NewNotificationClient(m.cli.Conn())
	return client.PushMessage(ctx, in, opts...)
}
