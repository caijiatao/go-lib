// Code generated by goctl. DO NOT EDIT.
// Source: push_svr.proto

package pusher

import (
	"context"

	"chat-app-svr/rpc/push_svr/push"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	PushMessageReply   = push.PushMessageReply
	PushMessageRequest = push.PushMessageRequest

	Pusher interface {
		PushMessage(ctx context.Context, in *PushMessageRequest, opts ...grpc.CallOption) (*PushMessageReply, error)
	}

	defaultPusher struct {
		cli zrpc.Client
	}
)

func NewPusher(cli zrpc.Client) Pusher {
	return &defaultPusher{
		cli: cli,
	}
}

func (m *defaultPusher) PushMessage(ctx context.Context, in *PushMessageRequest, opts ...grpc.CallOption) (*PushMessageReply, error) {
	client := push.NewPusherClient(m.cli.Conn())
	return client.PushMessage(ctx, in, opts...)
}
