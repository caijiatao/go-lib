// Code generated by goctl. DO NOT EDIT.
// Source: receive_svr.proto

package server

import (
	"context"

	"chat-app-svr/rpc/receive_svr/internal/logic"
	"chat-app-svr/rpc/receive_svr/internal/svc"
	"chat-app-svr/rpc/receive_svr/receive"
)

type ReceiverServer struct {
	svcCtx *svc.ServiceContext
	receive.UnimplementedReceiverServer
}

func NewReceiverServer(svcCtx *svc.ServiceContext) *ReceiverServer {
	return &ReceiverServer{
		svcCtx: svcCtx,
	}
}

func (s *ReceiverServer) ReceiveMessage(ctx context.Context, in *receive.ReceiveMessageRequest) (*receive.ReceiveMessageReply, error) {
	l := logic.NewReceiveMessageLogic(ctx, s.svcCtx)
	return l.ReceiveMessage(in)
}

func (s *ReceiverServer) ReceiveGroupMessage(ctx context.Context, in *receive.ReceiveGroupMessageRequest) (*receive.ReceiveGroupMessageReply, error) {
	l := logic.NewReceiveGroupMessageLogic(ctx, s.svcCtx)
	return l.ReceiveGroupMessage(in)
}
