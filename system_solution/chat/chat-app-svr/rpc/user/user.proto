syntax = "proto3";

package user;
option go_package="./user";

message UserDetailRequest {
  int64 userId = 1;
}

message UserInfo {
  int64 user_id = 1;
  string name = 2;
  string email = 3;
  string phone = 4;
  string avatar = 6;
  string status = 7;
  int64 created_at = 8;
}

message UserDetailReply {
  UserInfo user_info = 1;
  string server_id = 2;
}

message Request {
  string ping = 1;
}

message Response {
  string pong = 1;
}

message UserOnlineRequest {
  int64 user_id = 1;
  string server_id = 2;
}

message UserOnlineReply {}

message UserOfflineRequest{
  int64 user_id = 1;
}

message UserOfflineReply {
  int64 user_id = 1;
}

message AuthRequest {
  string token = 1;
}

message AuthReply {
  UserInfo user_info = 1;
}

message AddFriendRequest {
  int64 user_id = 1;
  int64 friend_id = 2;
}

message AddFriendReply {
  int64 user_id = 1;
  int64 friend_id = 2;
}

message DeleteFriendRequest {
  int64 user_id = 1;
  int64 friend_id = 2;
}

message DeleteFriendReply {
  int64 user_id = 1;
  int64 friend_id = 2;
}

message FriendListRequest {
}

message FriendListReply {
  repeated UserInfo friend_list = 1;
}

message SearchUserRequest {
  string keyword = 1;
}

message SearchUserReply {
  repeated UserInfo user_list = 1;
}

service User {
  rpc Ping(Request) returns(Response);
  rpc Auth(AuthRequest) returns (AuthReply);
  rpc UserDetail(UserDetailRequest) returns(UserDetailReply);
  rpc UserOnline(UserOnlineRequest) returns(UserOnlineReply);
  rpc UserOffline(UserOfflineRequest) returns(UserOfflineReply);
  rpc AddFriend(AddFriendRequest) returns(AddFriendReply);
  rpc DeleteFriend(DeleteFriendRequest) returns(DeleteFriendReply);
  rpc FriendList(FriendListRequest) returns(FriendListReply);
  rpc SearchUser(SearchUserRequest) returns(SearchUserReply);
}
